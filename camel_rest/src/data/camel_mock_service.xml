<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="6d1de0d5-86ce-402b-b2ff-ff9dad710ef2" activeEnvironment="Default" name="Project 1" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="64348de6-27c1-413e-b981-113360cb4ac4" port="8585" path="/camelmocksrvice" host="Lenovo-PC" name="CamelRestService" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.mock.WsdlMockServiceDesktopPanel$LogListModel@maxSize">100</con:setting></con:settings><con:properties/><con:restMockAction name="/ping" method="GET" resourcePath="/ping" id="051fc18d-75a8-4bde-97d1-e584a5a2880f"><con:settings/><con:defaultResponse>OK</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="OK" id="e2f57ec9-bc3b-4ee9-9411-56c7645e125b" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>"ClientResponse":{"status":"OK"}</con:responseContent><con:header><con:name>Content-Type</con:name><con:value>application/json</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>